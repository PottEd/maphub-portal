<script>
$(function() {
  $( "#selectable" ).selectable();
});

$(document).ready(function(){
  
  $("#new_collection, .edit_collection").submit(function(){
    // iterate over each selected map container element
    $("li.ui-selected").each(function(){
      var mapId = $(this).find("span.mapId").html();  // find the map ID
      $("#collection_map_ids option[value='" + mapId + "']:first")[0].selected = true;  // synchronize the multiple select box
    });
    return true;
  });
  
  $("#buttonSelectAll").click(function(){
    // add "selected" attribute to every map container
    $(".singleMapContainer").each(function(){
      $(this).addClass("ui-selected");
    });
  });
  
  $("#buttonSelectNone").click(function(){
    // remove "selected" attribute from each "selectee" 
    // (these can be nested elements too, if dragged)
    $(".ui-selectee").each(function(){
      $(this).removeClass("ui-selected");
    });
  })
  
});
</script>

<style>
#selectable .ui-selecting { background: #FECA40; }
#selectable .ui-selected {   background-color: #5ca7cc; color: white; }
#selectable { list-style-type: none; margin: 0; padding: 0; }
</style>


<%= form_for(@collection) do |f| %>
  <% if @collection.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@collection.errors.count, "error") %> prohibited this collection from being saved:</h2>

      <ul>
      <% @collection.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

<p>
    <%= f.label :title %><br />
    <%= f.text_field :title, :autofocus => true %>
</p>    
<p>
    <%= f.label :description, :class => "slideDown" %> <em>(Click to add one...)</em> <br />
    <%= f.text_area :description, :class => "hiddenElement" %>
</p>
    
    <hr>
    
    <h3>Select Maps for this Collection</h3>
    
    <p>
      Click or drag across the maps below to select them. You can hold <kbd>Ctrl</kbd> or <kbd>Cmd</kbd> to select multiple maps).
    </p>
    <p>
        <a id="buttonSelectAll">
          Select all
        </a>
        |
        <a id="buttonSelectNone">
          Clear selection
        </a>
    </p>
    
    
    <div>
      
      <!-- This is hidden until I can figure out how to sync with collection sync -->
      <ol id="selectable">
        <% for map in current_user.maps %>
          <% if @collection.maps.include? map %>
            <li class="singleMapContainer ui-selected">
          <% else %>
            <li class="singleMapContainer">
          <% end %>
            <div class="singleMapInfo">
              <span class="mapId" style="display:none;"><%= map.id %></span>
              <strong><%= map.title %></strong><br>
              <%= map.creation_date %><br>
              <%= image_tag(map.thumbnail_url) %>
            </div>
          </li>
        <% end %>
      </ol>
      <br style="clear:both;">
      
    </div>

<p>
    <%= collection_select :collection, 
        :map_ids, 
        @collection.user.maps, 
        :id,
        :title, 
        # { :selected => @collection.map_ids }, 
        # FIXME - normally, the already contained maps would be preselected by the line above.
        # This is useful because we don't want to select everything again.
        # But if we want to remove maps using the jQuery select, these will NOT be removed by the
        # Javascript above. We therefore don't select any maps at all but resynchronize from 
        # the jQuery select.
        { :selected => nil },
        { :class => "map_select hiddenElement", :multiple => true, :size => '10', :name => 'collection[map_ids][]' }
    %>
</p>

<p>
    <%= f.label :public, "Should this collection be public?" %> <i>(Non-public maps will still be hidden)</i>&nbsp;
    <%= f.check_box :public, :checked => true %>
</p>

  <div class="actions">
    <%= f.submit %>
  </div>
<% end %>
